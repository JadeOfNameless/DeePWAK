optparse::OptionParser
OptionParser
dirfns
> library(dirfns)
library(dirfns)
groups
q()
n
clusts
clusts[,1]
clusts[1,]
apply(clusts,2,unique)
get.hyper
statplot
clusts
statplot
dot.stat
clusthyper
moreComplexHeatmap::
condHyper
dotPscale
dat
row.names(groups)
cond
conds
clusts
typeof(clusts)
lapply(clusts,function(c) lapply(pheno,function(p) condHyper(row.names(pheno),p,c)))
lapply(pheno,function(p) condHyper(row.names(pheno),p,clusts[,1]))
pheno
dim(pheno)
condHyper(row.names(pheno),pheno[,1],clusts[,1])
mapply(pheno,2,function(p) condHyper(row.names(pheno),p,clusts[,1])
)
apply(pheno,2,function(p) condHyper(row.names(pheno),p,clusts[,1]))
lapply(pheno,function(p) condHyper(row.names(pheno),p,clusts[,1]))
lapply(as.data.frame(pheno),function(p) condHyper(row.names(pheno),p,clusts[,1]))
lapply(as.data.frame(clusts),function(c) lapply(as.data.frame(pheno),function(p) condHyper(row.names(pheno),p,c)))
lapply(as.data.frame(clusts),function(c) lapply(as.data.frame(pheno),function(p) condHyper(row.names(pheno),p,c)))
length(phenohyper)
sapply(phenohyper,length)
sapply(phenohyper,length)
phenohyper[1]
phenohyper[[1]]
phenohyper[[1]][[1]]
odds
odds[[1]]
odds[[2]]
odds[[3]]
odds[[4]]
sapply(odds,dim)
names(odds)
repeat
()
repeat('a',3)
repeat('a')
rep('e',3)
csplit
csplit
)
odds
pheno
pheno[1]
pheno[1,]
names(hyper)
names(phenohyper)
odds
names(hyper)
pheno
is.data.frame(pheno)
hyper
sapply(odds,dim)
sapply(hyper[[1]],dim)
rowsplit
hyper
hyper[[1]]
hyper[[1]][[1]]
hyper[[1]][[2]]
rowsplit
names(hyper[[1]])
rowsplit
q
qval
dotPscale
qval
is.finite(qval)
is.finite(as.matrix(qval))
dotPscale
col.z
pheno
pheno[1,]
rowsplit
odds
length(rowsplit)
dim(odds)
odds
dim(fdr)
lrtab
E
E[[1]]
E[[1]][1,]
lrcsv
lrtab
E[1,]
E[[1]][1,]
C[[1]][1,]
names(E)
names(C)
dotPscale
hmdot
groups
groups$Phenotype
do.call(cbind,C)
dim(do.call(cbind,C))
14*5
names(C)
csplit
?Heatmap
??Heatmap
?ComplexHeatmap::Heatmap
Heatmap
umap
library(umap)
umap(E[[1]])
library(umap)
umap(E[[1]])
umap(E[[1]])$layout
names(E)
length(plots)
pca(E[[i]])
prcomp(E[[i]])
prcomp(E[[1]])
prcomp(E[[1]])[,1:2]
names(prcomp(E[[1]]))
prcomp(E[[1]])$x[,1:2]
Heatmap
ln
log
log(softclust)
dim(log(softclust))
dim(logits)
sum(softclust<0)
sum(softclust==0)
q()
y
